{"version":3,"sources":["components/CharacterCard/CharacterCard.jsx","data/character_data.js","components/GameBoard/GameBoard.jsx","data/computer_answers.js","components/Chat/Chat.jsx","components/About/About.jsx","App.js","index.js"],"names":["CharacterCard","props","_useState","useState","_useState2","_slicedToArray","isFlipped","setIsFlipped","useEffect","resetCardFlip","document","addEventListener","removeEventListener","React","createElement","className","onClick","src","character","image","alt","name","style","maxHeight","characters","id","GameBoard","character_data","Grid","container","spacing","map","item","key","computerAnswers","Is it a male character?","yes","no","Is it a female character?","Is the character American?","Is the character British?","Is the character Canadian?","Is the character known as a rapper?","Is the character married?","Does the character have children?","Has the character ever been part of a band/group?","Were they ever a Disney star?","Have they ever won a Grammy award?","Do they have an NZ #1 single?","Have they ever headlined the Super Bowl halftime show?","Chat","_ref","computerCharacter","questionCount","setQuestionCount","isGameReset","resetChat","chatMessages","setChatMessages","_useState3","_useState4","selectedQuestion","setSelectedQuestion","chatContainerRef","useRef","scrollToBottom","getComputerAnswer","question","answerList","characterName","includes","current","scrollTop","scrollHeight","ref","message","index","answer","type","list","value","onChange","event","target","placeholder","Object","keys","filter","toLowerCase","newChatMessage","concat","_toConsumableArray","prevCount","About","showInstructions","setShowInstructions","showChat","setShowChat","_useState5","_useState6","setComputerCharacter","_useState7","_useState8","selectedCharacter","setSelectedCharacter","_useState9","_useState10","gameResult","setGameResult","_useState11","_useState12","_useState13","_useState14","setIsGameReset","Event","dispatchEvent","randomIndex","Math","floor","random","length","console","log","e","App","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"sSAkCeA,MA/Bf,SAAuBC,GAAO,IAAAC,EACMC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAiB9B,OAfAI,oBAAU,WACR,IAAMC,EAAgB,WACpBF,GAAa,IAIf,OADAG,SAASC,iBAAiB,gBAAiBF,GACpC,WACLC,SAASE,oBAAoB,gBAAiBH,KAE/C,IAODI,IAAAC,cAAA,OAAKC,UAAU,iBAAiBC,QALd,WAClBT,GAAcD,KAKZO,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEG,IAAKX,EAAY,4BAA8BL,EAAMiB,UAAUC,MAC/DC,IAAKnB,EAAMiB,UAAUG,KACrBC,MAAO,CAAEC,UAAW,aC4BfC,EAvDI,CACjB,CAAEC,GAAI,EAAGJ,KAAM,QAASF,MAAO,kCAC/B,CACEM,GAAI,EACJJ,KAAM,gBACNF,MAAO,0CAET,CAAEM,GAAI,EAAGJ,KAAM,YAAaF,MAAO,sCACnC,CAAEM,GAAI,EAAGJ,KAAM,UAAWF,MAAO,oCACjC,CACEM,GAAI,EACJJ,KAAM,iBACNF,MAAO,2CAET,CAAEM,GAAI,EAAGJ,KAAM,aAAcF,MAAO,uCACpC,CAAEM,GAAI,EAAGJ,KAAM,cAAeF,MAAO,wCACrC,CAAEM,GAAI,EAAGJ,KAAM,WAAYF,MAAO,qCAClC,CAAEM,GAAI,EAAGJ,KAAM,QAASF,MAAO,kCAC/B,CAAEM,GAAI,GAAIJ,KAAM,WAAYF,MAAO,qCACnC,CAAEM,GAAI,GAAIJ,KAAM,aAAcF,MAAO,uCACrC,CAAEM,GAAI,GAAIJ,KAAM,YAAaF,MAAO,sCACpC,CACEM,GAAI,GACJJ,KAAM,gBACNF,MAAO,0CAET,CACEM,GAAI,GACJJ,KAAM,oBACNF,MAAO,8CAET,CAAEM,GAAI,GAAIJ,KAAM,aAAcF,MAAO,uCACrC,CAAEM,GAAI,GAAIJ,KAAM,YAAaF,MAAO,sCACpC,CAAEM,GAAI,GAAIJ,KAAM,oBAAqBF,MAAO,gCAC5C,CACEM,GAAI,GACJJ,KAAM,cACNF,MAAO,wCAET,CAAEM,GAAI,GAAIJ,KAAM,aAAcF,MAAO,uCACrC,CAAEM,GAAI,GAAIJ,KAAM,UAAWF,MAAO,oCAClC,CACEM,GAAI,GACJJ,KAAM,eACNF,MAAO,yCAET,CACEM,GAAI,GACJJ,KAAM,eACNF,MAAO,yCAET,CAAEM,GAAI,GAAIJ,KAAM,aAAcF,MAAO,uCACrC,CAAEM,GAAI,GAAIJ,KAAM,OAAQF,MAAO,wCChClBO,MAdf,WACE,IAAMF,EAAaG,EAEnB,OACEd,IAAAC,cAACc,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGf,UAAU,cACnCS,EAAWO,IAAI,SAACb,GAAS,OACxBL,IAAAC,cAACc,IAAI,CAACI,MAAI,EAACC,IAAKf,EAAUO,GAAIV,UAAU,oBACtCF,IAAAC,cAACd,EAAa,CAACkB,UAAWA,wBCqWrBgB,EAlXS,CACtBC,0BAA2B,CACzBC,IAAK,CACH,YACA,aACA,QACA,aACA,YACA,gBACA,oBACA,oBACA,aACA,eACA,aACA,QAEFC,GAAI,CACF,QACA,gBACA,UACA,iBACA,cACA,WACA,WACA,aACA,YACA,cACA,UACA,iBAGJC,4BAA6B,CAC3BF,IAAK,CACH,QACA,gBACA,UACA,iBACA,cACA,WACA,WACA,aACA,YACA,cACA,UACA,gBAEFC,GAAI,CACF,YACA,aACA,QACA,aACA,YACA,gBACA,oBACA,oBACA,aACA,eACA,aACA,SAGJE,6BAA8B,CAC5BH,IAAK,CACH,aACA,YACA,oBACA,oBACA,aACA,gBACA,UACA,iBACA,cACA,WACA,aACA,YACA,cACA,gBAEFC,GAAI,CACF,YACA,QACA,aACA,gBACA,eACA,aACA,OACA,QACA,WACA,YAGJG,4BAA6B,CAC3BJ,IAAK,CAAC,OAAQ,QAAS,WAAY,cACnCC,GAAI,CACF,YACA,aACA,QACA,YACA,gBACA,oBACA,oBACA,aACA,eACA,aACA,gBACA,UACA,iBACA,cACA,WACA,aACA,YACA,cACA,UACA,iBAGJI,6BAA8B,CAC5BL,IAAK,CAAC,QAAS,gBAAiB,eAAgB,cAChDC,GAAI,CACF,YACA,aACA,YACA,oBACA,oBACA,aACA,gBACA,UACA,iBACA,cACA,WACA,aACA,YACA,cACA,eACA,OACA,QACA,WACA,aACA,YAGJK,sCAAuC,CACrCN,IAAK,CAAC,YAAa,QAAS,qBAC5BC,GAAI,CACF,aACA,YACA,gBACA,oBACA,aACA,gBACA,UACA,iBACA,cACA,WACA,aACA,YACA,cACA,eACA,eACA,aACA,OACA,QACA,WACA,aACA,YAGJM,4BAA6B,CAC3BP,IAAK,CACH,YACA,oBACA,aACA,gBACA,UACA,aACA,gBACA,kBAEFC,GAAI,CACF,aACA,cACA,WACA,oBACA,YACA,QACA,eACA,aACA,OACA,QACA,WACA,UACA,aACA,YACA,cACA,iBAGJO,oCAAqC,CACnCR,IAAK,CACH,YACA,oBACA,oBACA,aACA,UACA,iBACA,aACA,QACA,aACA,OACA,QACA,WAEFC,GAAI,CACF,gBACA,YACA,cACA,eACA,aACA,cACA,WACA,YACA,gBACA,eACA,aACA,aAGJQ,oDAAqD,CACnDT,IAAK,CAAC,YAAa,oBAAqB,aAAc,UAAW,QACjEC,GAAI,CACF,oBACA,iBACA,aACA,QACA,aACA,QACA,UACA,gBACA,YACA,cACA,eACA,aACA,cACA,WACA,YACA,gBACA,eACA,aACA,aAGJS,gCAAiC,CAC/BV,IAAK,CACH,oBACA,iBACA,YACA,aACA,cACA,eAEFC,GAAI,CACF,UACA,OACA,oBACA,aACA,QACA,aACA,QACA,UACA,gBACA,YACA,eACA,aACA,WACA,YACA,gBACA,eACA,aACA,aAGJU,qCAAsC,CACpCX,IAAK,CACH,oBACA,iBACA,UACA,QACA,aACA,QACA,UACA,gBACA,YACA,eACA,aACA,WACA,YACA,gBACA,aACA,YAEFC,GAAI,CACF,YACA,aACA,cACA,cACA,OACA,oBACA,aACA,cACA,iBAGJW,gCAAiC,CAC/BZ,IAAK,CACH,QACA,gBACA,UACA,iBACA,aACA,WACA,QACA,WACA,aACA,YACA,gBACA,oBACA,aACA,YACA,cACA,aACA,UACA,eACA,eACA,aACA,QAEFC,GAAI,CAAC,YAAa,cAAe,sBAEnCY,yDAA0D,CACxDb,IAAK,CACH,oBACA,UACA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","file":"static/js/main.8e288f23.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./CharacterCard.css\";\n\nfunction CharacterCard(props) {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  useEffect(() => {\n    const resetCardFlip = () => {\n      setIsFlipped(false);\n    };\n\n    document.addEventListener(\"resetCardFlip\", resetCardFlip);\n    return () => {\n      document.removeEventListener(\"resetCardFlip\", resetCardFlip);\n    };\n  }, []);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  return (\n    <div className=\"character-card\" onClick={handleClick}>\n      <div>\n        <img\n          src={isFlipped ? \"blank_cards/red_blank.png\" : props.character.image}\n          alt={props.character.name}\n          style={{ maxHeight: \"8rem\" }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterCard;\n","const characters = [\n  { id: 1, name: \"Adele\", image: \"character_images/adele_red.png\" },\n  {\n    id: 2,\n    name: \"Ariana Grande\",\n    image: \"character_images/ariana_grande_red.png\",\n  },\n  { id: 3, name: \"Bad Bunny\", image: \"character_images/bad_bunny_red.png\" },\n  { id: 4, name: \"Beyonce\", image: \"character_images/beyonce_red.png\" },\n  {\n    id: 5,\n    name: \"Britney Spears\",\n    image: \"character_images/britney_spears_red.png\",\n  },\n  { id: 6, name: \"Bruno Mars\", image: \"character_images/bruno_mars_red.png\" },\n  { id: 7, name: \"Demi Lovato\", image: \"character_images/demi_lovato_red.png\" },\n  { id: 8, name: \"Doja Cat\", image: \"character_images/doja_cat_red.png\" },\n  { id: 9, name: \"Drake\", image: \"character_images/drake_red.png\" },\n  { id: 10, name: \"Dua Lipa\", image: \"character_images/dua_lipa_red.png\" },\n  { id: 11, name: \"Ed Sheeran\", image: \"character_images/ed_sheeran_red.png\" },\n  { id: 12, name: \"Joe Jonas\", image: \"character_images/joe_jonas_red.png\" },\n  {\n    id: 13,\n    name: \"Justin Bieber\",\n    image: \"character_images/justin_bieber_red.png\",\n  },\n  {\n    id: 14,\n    name: \"Justin Timberlake\",\n    image: \"character_images/justin_timberlake_red.png\",\n  },\n  { id: 15, name: \"Katy Perry\", image: \"character_images/katy_perry_red.png\" },\n  { id: 16, name: \"Lady Gaga\", image: \"character_images/lady_gaga_red.png\" },\n  { id: 17, name: \"Machine Gun Kelly\", image: \"character_images/mgk_red.png\" },\n  {\n    id: 18,\n    name: \"Miley Cyrus\",\n    image: \"character_images/miley_cyrus_red.png\",\n  },\n  { id: 19, name: \"Nick Jonas\", image: \"character_images/nick_jonas_red.png\" },\n  { id: 20, name: \"Rihanna\", image: \"character_images/rihanna_red.png\" },\n  {\n    id: 21,\n    name: \"Shawn Mendes\",\n    image: \"character_images/shawn_mendes_red.png\",\n  },\n  {\n    id: 22,\n    name: \"Taylor Swift\",\n    image: \"character_images/taylor_swift_red.png\",\n  },\n  { id: 23, name: \"The Weeknd\", image: \"character_images/the_weeknd_red.png\" },\n  { id: 24, name: \"Zayn\", image: \"character_images/zayn_red.png\" },\n];\n\nexport default characters;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\nimport character_data from \"../../data/character_data\";\nimport \"./GameBoard.css\";\n\nfunction GameBoard() {\n  const characters = character_data;\n\n  return (\n    <Grid container spacing={2} className=\"game-board\">\n      {characters.map((character) => (\n        <Grid item key={character.id} className=\"game-board__card\">\n          <CharacterCard character={character} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default GameBoard;\n","const computerAnswers = {\n  \"Is it a male character?\": {\n    yes: [\n      \"Bad Bunny\",\n      \"Bruno Mars\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Zayn\",\n    ],\n    no: [\n      \"Adele\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Dua Lipa\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Rihanna\",\n      \"Taylor Swift\",\n    ],\n  },\n  \"Is it a female character?\": {\n    yes: [\n      \"Adele\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Dua Lipa\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Rihanna\",\n      \"Taylor Swift\",\n    ],\n    no: [\n      \"Bad Bunny\",\n      \"Bruno Mars\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Zayn\",\n    ],\n  },\n  \"Is the character American?\": {\n    yes: [\n      \"Bruno Mars\",\n      \"Joe Jonas\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n    ],\n    no: [\n      \"Bad Bunny\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Justin Bieber\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Zayn\",\n      \"Adele\",\n      \"Dua Lipa\",\n      \"Rihanna\",\n    ],\n  },\n  \"Is the character British?\": {\n    yes: [\"Zayn\", \"Adele\", \"Dua Lipa\", \"Ed Sheeran\"],\n    no: [\n      \"Bad Bunny\",\n      \"Bruno Mars\",\n      \"Drake\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Rihanna\",\n      \"Taylor Swift\",\n    ],\n  },\n  \"Is the character Canadian?\": {\n    yes: [\"Drake\", \"Justin Bieber\", \"Shawn Mendes\", \"The Weeknd\"],\n    no: [\n      \"Bad Bunny\",\n      \"Bruno Mars\",\n      \"Joe Jonas\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n      \"Zayn\",\n      \"Adele\",\n      \"Dua Lipa\",\n      \"Ed Sheeran\",\n      \"Rihanna\",\n    ],\n  },\n  \"Is the character known as a rapper?\": {\n    yes: [\"Bad Bunny\", \"Drake\", \"Machine Gun Kelly\"],\n    no: [\n      \"Bruno Mars\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Justin Timberlake\",\n      \"Nick Jonas\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Zayn\",\n      \"Adele\",\n      \"Dua Lipa\",\n      \"Ed Sheeran\",\n      \"Rihanna\",\n    ],\n  },\n  \"Is the character married?\": {\n    yes: [\n      \"Joe Jonas\",\n      \"Justin Timberlake\",\n      \"Nick Jonas\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Ed Sheeran\",\n      \"Justin Bieber\",\n      \"Britney Spears\",\n    ],\n    no: [\n      \"Bruno Mars\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Machine Gun Kelly\",\n      \"Bad Bunny\",\n      \"Drake\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Zayn\",\n      \"Adele\",\n      \"Dua Lipa\",\n      \"Rihanna\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n    ],\n  },\n  \"Does the character have children?\": {\n    yes: [\n      \"Joe Jonas\",\n      \"Justin Timberlake\",\n      \"Machine Gun Kelly\",\n      \"Nick Jonas\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Katy Perry\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Zayn\",\n      \"Adele\",\n      \"Rihanna\",\n    ],\n    no: [\n      \"Ariana Grande\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n      \"Bruno Mars\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Bad Bunny\",\n      \"Justin Bieber\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Dua Lipa\",\n    ],\n  },\n  \"Has the character ever been part of a band/group?\": {\n    yes: [\"Joe Jonas\", \"Justin Timberlake\", \"Nick Jonas\", \"Beyonce\", \"Zayn\"],\n    no: [\n      \"Machine Gun Kelly\",\n      \"Britney Spears\",\n      \"Katy Perry\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Adele\",\n      \"Rihanna\",\n      \"Ariana Grande\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Taylor Swift\",\n      \"Bruno Mars\",\n      \"Demi Lovato\",\n      \"Doja Cat\",\n      \"Bad Bunny\",\n      \"Justin Bieber\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Dua Lipa\",\n    ],\n  },\n  \"Were they ever a Disney star?\": {\n    yes: [\n      \"Justin Timberlake\",\n      \"Britney Spears\",\n      \"Joe Jonas\",\n      \"Nick Jonas\",\n      \"Miley Cyrus\",\n      \"Demi Lovato\",\n    ],\n    no: [\n      \"Beyonce\",\n      \"Zayn\",\n      \"Machine Gun Kelly\",\n      \"Katy Perry\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Adele\",\n      \"Rihanna\",\n      \"Ariana Grande\",\n      \"Lady Gaga\",\n      \"Taylor Swift\",\n      \"Bruno Mars\",\n      \"Doja Cat\",\n      \"Bad Bunny\",\n      \"Justin Bieber\",\n      \"Shawn Mendes\",\n      \"The Weeknd\",\n      \"Dua Lipa\",\n    ],\n  },\n  \"Have they ever won a Grammy award?\": {\n    yes: [\n      \"Justin Timberlake\",\n      \"Britney Spears\",\n      \"Beyonce\",\n      \"Drake\",\n      \"Ed Sheeran\",\n      \"Adele\",\n      \"Rihanna\",\n      \"Ariana Grande\",\n      \"Lady Gaga\",\n      \"Taylor Swift\",\n      \"Bruno Mars\",\n      \"Doja Cat\",\n      \"Bad Bunny\",\n      \"Justin Bieber\",\n      \"The Weeknd\",\n      \"Dua Lipa\",\n    ],\n    no: [\n      \"Joe Jonas\",\n      \"Nick Jonas\",\n      \"Miley Cyrus\",\n      \"Demi Lovato\",\n      \"Zayn\",\n      \"Machine Gun Kelly\",\n      \"Katy Perry\",\n      \"Demi Lovato\",\n      \"Shawn Mendes\",\n    ],\n  },\n  \"Do they have an NZ #1 single?\": {\n    yes: [\n      \"Adele\",\n      \"Ariana Grande\",\n      \"Beyonce\",\n      \"Britney Spears\",\n      \"Bruno Mars\",\n      \"Doja Cat\",\n      \"Drake\",\n      \"Dua Lipa\",\n      \"Ed Sheeran\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Justin Timberlake\",\n      \"Katy Perry\",\n      \"Lady Gaga\",\n      \"Miley Cyrus\",\n      \"Nick Jonas\",\n      \"Rihanna\",\n      \"Shawn Mendes\",\n      \"Taylor Swift\",\n      \"The Weeknd\",\n      \"Zayn\",\n    ],\n    no: [\"Bad Bunny\", \"Demi Lovato\", \"Machine Gun Kelly\"],\n  },\n  \"Have they ever headlined the Super Bowl halftime show?\": {\n    yes: [\n      \"Justin Timberlake\",\n      \"Beyonce\",\n      \"Lady Gaga\",\n      \"Bruno Mars\",\n      \"Katy Perry\",\n      \"The Weeknd\",\n      \"Rihanna\",\n    ],\n    no: [\n      \"Adele\",\n      \"Ariana Grande\",\n      \"Britney Spears\",\n      \"Doja Cat\",\n      \"Drake\",\n      \"Dua Lipa\",\n      \"Ed Sheeran\",\n      \"Joe Jonas\",\n      \"Justin Bieber\",\n      \"Miley Cyrus\",\n      \"Nick Jonas\",\n      \"Shawn Mendes\",\n      \"Taylor Swift\",\n      \"Zayn\",\n      \"Bad Bunny\",\n      \"Demi Lovato\",\n      \"Machine Gun Kelly\",\n    ],\n  },\n};\n\nexport default computerAnswers;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport computerAnswers from \"../../data/computer_answers\";\nimport \"./Chat.css\";\n\nfunction Chat({\n  computerCharacter,\n  questionCount,\n  setQuestionCount,\n  isGameReset,\n  resetChat,\n}) {\n  const [chatMessages, setChatMessages] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState(\"\");\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatMessages]);\n\n  useEffect(() => {\n    if (isGameReset) {\n      setChatMessages([]);\n      resetChat();\n      setSelectedQuestion(\"\");\n    }\n  }, [isGameReset, resetChat]);\n\n  const handleQuestionChange = (event) => {\n    setSelectedQuestion(event.target.value);\n  };\n\n  const handleAskClick = () => {\n    if (selectedQuestion) {\n      const answer = getComputerAnswer(selectedQuestion);\n      const newChatMessage = { question: selectedQuestion, answer };\n      setChatMessages([...chatMessages, newChatMessage]);\n      setQuestionCount((prevCount) => prevCount + 1);\n      setSelectedQuestion(\"\");\n    }\n  };\n\n  const getFilteredQuestions = () => {\n    return Object.keys(computerAnswers).filter((question) =>\n      question.toLowerCase().includes(selectedQuestion.toLowerCase()),\n    );\n  };\n\n  const getComputerAnswer = (question) => {\n    if (selectedQuestion && computerCharacter) {\n      const answerList = computerAnswers[question];\n      if (answerList) {\n        const characterName = computerCharacter.name;\n        if (answerList.yes.includes(characterName)) {\n          return \"Yes\";\n        } else if (answerList.no.includes(characterName)) {\n          return \"No\";\n        }\n      }\n    }\n    return \"I don't know.\";\n  };\n\n  const scrollToBottom = () => {\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"question-count\">Question Count: {questionCount}</div>\n      <div className=\"chat-messages\" ref={chatContainerRef}>\n        {chatMessages.map((message, index) => (\n          <div key={index} className=\"chat-message\">\n            <div className=\"question\">{message.question}</div>\n            <div className=\"answer\">{message.answer}</div>\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <div className=\"dropdown-container\">\n          <input\n            type=\"text\"\n            list=\"questionOptions\"\n            value={selectedQuestion}\n            onChange={handleQuestionChange}\n            placeholder=\"Search for a question...\"\n          />\n          <datalist id=\"questionOptions\">\n            {getFilteredQuestions().map((question, index) => (\n              <option key={index} value={question} />\n            ))}\n          </datalist>\n          <button onClick={handleAskClick}>Ask</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport \"./About.css\";\nimport Chat from \"../Chat/Chat\";\n\nimport characters from \"../../data/character_data\";\n\nfunction About() {\n  const [showInstructions, setShowInstructions] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n  const [computerCharacter, setComputerCharacter] = useState(null);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [gameResult, setGameResult] = useState(null);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [isGameReset, setIsGameReset] = useState(false);\n\n  const handleInstructionsClick = () => {\n    setShowInstructions(true);\n    setShowChat(false);\n  };\n\n  const handlePlayComputerClick = () => {\n    setShowInstructions(false);\n    setShowChat(true);\n    setComputerCharacter(null);\n    setSelectedCharacter(null);\n    setGameResult(null);\n    setQuestionCount(0);\n    setIsGameReset(true);\n\n    const event = new Event(\"resetCardFlip\");\n    document.dispatchEvent(event);\n\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    const character = characters[randomIndex];\n    setComputerCharacter(character);\n    console.log(\"Computer Character:\", character);\n  };\n\n  const resetChat = () => {\n    setIsGameReset(false);\n  };\n\n  const handleGuessClick = () => {\n    if (selectedCharacter && computerCharacter) {\n      if (selectedCharacter === computerCharacter.name) {\n        setGameResult(\"win\");\n      } else {\n        setGameResult(\"lose\");\n      }\n    }\n  };\n\n  const getFilteredCharacters = () => {\n    if (selectedCharacter) {\n      return characters.filter((character) =>\n        character.name.toLowerCase().includes(selectedCharacter.toLowerCase()),\n      );\n    } else {\n      return characters;\n    }\n  };\n\n  return (\n    <div>\n      <img\n        className=\"guess-who-logo\"\n        src=\"Guess_Who_Logo.svg\"\n        alt=\"Guess Who Logo\"\n      />\n      <div className=\"menu\">\n        <button onClick={handleInstructionsClick}>Instructions</button>\n        {(!gameResult || gameResult === \"win\" || gameResult === \"lose\") && (\n          <button onClick={handlePlayComputerClick}>Play</button>\n        )}\n      </div>\n      {showInstructions && (\n        <div className=\"instructions\">\n          <h2 className=\"instructions-heading\">Instructions</h2>\n          <p className=\"instructions-paragraph\">\n            Once you click play, the computer will randomly select a celebrity\n            which you will have to guess. A chat box will pop up where you can\n            search for a yes/no question to ask the computer. As you rule out\n            characters who don't fit with the answers to the yes/no questions,\n            you can turn them over by clicking on their corresponding card in\n            the game board to the left. Once you think you have solved the\n            mystery, select/search for the character from the drop down and\n            click Guess.\n          </p>\n        </div>\n      )}\n      {showChat && (\n        <div className=\"game-container\">\n          <Chat\n            computerCharacter={computerCharacter}\n            questionCount={questionCount}\n            setQuestionCount={setQuestionCount}\n            isGameReset={isGameReset}\n            resetChat={resetChat}\n          />\n          {!gameResult && (\n            <div className=\"dropdown-container\">\n              <input\n                type=\"text\"\n                list=\"characterOptions\"\n                value={selectedCharacter}\n                onChange={(e) => setSelectedCharacter(e.target.value)}\n                placeholder=\"Search for a character...\"\n              />\n              <datalist id=\"characterOptions\">\n                {getFilteredCharacters().map((character, index) => (\n                  <option key={index} value={character.name} />\n                ))}\n              </datalist>\n              <button onClick={handleGuessClick}>Guess</button>\n            </div>\n          )}\n          {gameResult === \"win\" && (\n            <p className=\"result\">Congratulations! You win!</p>\n          )}\n          {gameResult === \"lose\" && (\n            <p className=\"result\">\n              Sorry, you lose! The character was {computerCharacter.name}\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport GameBoard from \"./components/GameBoard/GameBoard\";\nimport About from \"./components/About/About\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"gameboard_container\">\n        <GameBoard />\n      </div>\n      <div className=\"about_container\">\n        <About />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}